# Multi-stage build para otimizar tamanho da imagem
FROM node:18-alpine as build

WORKDIR /app

# Argumentos de build
ARG REACT_APP_API_URL
ARG REACT_APP_APP_NAME="Upload Tecnomyl"
ARG REACT_APP_ENV="production"

# Definir variáveis de ambiente para o build
ENV REACT_APP_API_URL=${REACT_APP_API_URL}
ENV REACT_APP_APP_NAME=${REACT_APP_APP_NAME}
ENV REACT_APP_ENV=${REACT_APP_ENV}

# Copiar package.json e package-lock.json
COPY package*.json ./

# Instalar dependências
RUN npm ci --only=production

# Copiar código da aplicação
COPY . .

# Build da aplicação para produção
RUN npm run build

# Stage 2: Nginx para servir arquivos estáticos
FROM nginx:alpine

# Copiar build da aplicação
COPY --from=build /app/build /usr/share/nginx/html

# Copiar configuração customizada do nginx
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Criar script de configuração dinâmica
COPY configure-app.sh /docker-entrypoint.d/
RUN chmod +x /docker-entrypoint.d/configure-app.sh

# Expor porta
EXPOSE 80

# Comando para iniciar nginx
CMD ["nginx", "-g", "daemon off;"] 